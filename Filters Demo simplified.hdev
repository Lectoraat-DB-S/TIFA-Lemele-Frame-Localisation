<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="23.05.0.0">
<procedure name="main">
<interface/>
<body>
<c>* Script to analyze data from Azure Kinect</c>
<c>* Johan van Voskuilen, 20231012</c>
<c>* Jeroen Poetsma, 20231013</c>
<c></c>
<c>* _________________________________________________________________________</c>
<c></c>
<c>* Variables</c>
<c>* Device IDs (Centre C)</c>
<l>IDC := '000237925112'</l>
<l>IDR := 'NA'</l>
<l>IDL := 'NA'</l>
<c></c>
<c>* Set display resolution</c>
<l>Width := 1920</l>
<l>Height := 1080</l>
<c></c>
<c>* Scanning box measurements (in meters)</c>
<l>Xmin := -0.6</l>
<l>Xmax := 0.6</l>
<l>Ymin := -0.4</l>
<l>Ymax := 1.1</l>
<l>Zmin := 1.55</l>
<l>Zmax := 1.95</l>
<c></c>
<c>* Pose translation (camera to robot/cobot) (in meters/degrees)</c>
<l>TransX := -0.149514</l>
<l>TransY := -0.971785</l>
<l>TransZ := 0.241117</l>
<l>RotX := -90</l>
<l>RotY := 0</l>
<l>RotZ := 180</l>
<c></c>
<c>* Path to point cloud</c>
<l>Path := 'C:/Users/jeroe/Desktop/TestTranslatie_'</l>
<c></c>
<c>* Path to save output parameters to</c>
<l>SaveTxt := 'C:/Users/jeroe/Desktop/TestTranslatie.txt'</l>
<c></c>
<c>* _________________________________________________________________________</c>
<c></c>
<c>* Read-in data (Centre)</c>
<l>read_object_model_3d (Path + IDC + '.ply', 'mm', [], [], PointCloudC, Status)</l>
<c></c>
<c>* Start program timer</c>
<l>count_seconds(StartFilter)</l>
<c></c>
<c>* Coarse filter data (Centre)</c>
<l>select_points_object_model_3d (PointCloudC, 'point_coord_x', Xmin, Xmax, PointCloudCThresholded)</l>
<l>select_points_object_model_3d (PointCloudCThresholded, 'point_coord_y', Ymin, Ymax, PointCloudCThresholded)</l>
<l>select_points_object_model_3d (PointCloudCThresholded, 'point_coord_z', Zmin, Zmax, PointCloudCThresholded)</l>
<c></c>
<c>* Filter out noise (Centre)</c>
<l>get_object_model_3d_params (PointCloudCThresholded, 'num_points', NumPoints)</l>
<l>NumNeighbors := 15</l>
<l>InlierRate := 99</l>
<l>get_object_model_3d_params (PointCloudCThresholded, 'neighbor_distance ' + NumNeighbors, DistanceDistribution)</l>
<l>Distance := sort(DistanceDistribution)[|DistanceDistribution| * InlierRate / 100]</l>
<l>select_points_object_model_3d (PointCloudCThresholded, 'num_neighbors ' + Distance, 15, NumPoints, PointCloudCThresholdedFiltered)</l>
<c></c>
<c>* _________________________________________________________________________</c>
<c></c>
<c>* Get bounding box and pose</c>
<l>smallest_bounding_box_object_model_3d (PointCloudCThresholdedFiltered, 'oriented', BoundingBoxPose, LengthX, LengthY, LengthZ)</l>
<l>gen_box_object_model_3d (BoundingBoxPose, LengthX, LengthY, LengthZ, BoundingBox)</l>
<l>* get_object_model_3d_params (BoundingBox, 'primitive_pose', BoundingBoxPose)</l>
<l>* convert_pose_type (BoundingBoxPose, 'Rp+T', 'abg', 'point', PoseOut)</l>
<c></c>
<c>* Translate pose as seen from camera to pose as seen from origin robot/cobot</c>
<l>* create_pose (TransX, TransY, TransZ, RotX, RotY, RotZ, 'Rp+T', 'gba', 'point', PoseOffset)</l>
<l>* pose_compose (BoundingBoxPose, PoseOffset, BoundingBoxPoseTrans)</l>
<c></c>
<l>create_pose (0, 0, 0, RotX, RotY, RotZ, 'Rp+T', 'abg', 'point', PoseRot)</l>
<l>rigid_trans_object_model_3d (BoundingBox, PoseRot, BoundingBoxTrans)</l>
<l>get_object_model_3d_params (BoundingBoxTrans, 'primitive_pose', BoundingBoxTransPose)</l>
<l>* create_pose (TransX, TransY, TransZ, 0, 0, 0, 'Rp+T', 'gba', 'point', PoseOffset)</l>
<l>* pose_compose (BoundingBoxTransPose, PoseOffset, BoundingBoxTransPoseTrans)</l>
<l>BoundingBoxTransPose[0] := BoundingBoxTransPose[0] + TransX</l>
<l>BoundingBoxTransPose[1] := BoundingBoxTransPose[1] + TransY</l>
<l>BoundingBoxTransPose[2] := BoundingBoxTransPose[2] + TransZ</l>
<c></c>
<c>* End program timer</c>
<l>count_seconds(EndFilter)</l>
<l>RunTime := EndFilter - StartFilter</l>
<c></c>
<c>* _________________________________________________________________________</c>
<c></c>
<c>* Write output data to file</c>
<l>open_file (SaveTxt, 'output', FileHandle)</l>
<l>fwrite_string (FileHandle, 'The detected measurements (BoundingBox) are as follows:' + '\n' + '\n')</l>
<l>fwrite_string (FileHandle, 'Measured X axis (width in m):' + '\n' + LengthX + '\n' + '\n')</l>
<l>fwrite_string (FileHandle, 'Measured Y axis (height in m):' + '\n' + LengthY + '\n' + '\n')</l>
<l>fwrite_string (FileHandle, 'Measured Z axis (depth in m, inaccurate):' + '\n' + LengthZ + '\n' + '\n')</l>
<l>fwrite_string (FileHandle, '\n' + 'The detected translated pose values (BoundingBoxTransPose) are as follows:' + '\n' + '\n')</l>
<l>fwrite_string (FileHandle, 'Transformation on the x axis (in m):' + '\n' + BoundingBoxTransPose[0] + '\n' + '\n')</l>
<l>fwrite_string (FileHandle, 'Transformation on the y axis (in m):' + '\n' + BoundingBoxTransPose[1] + '\n' + '\n')</l>
<l>fwrite_string (FileHandle, 'Transformation on the z axis (in m):' + '\n' + BoundingBoxTransPose[2] + '\n' + '\n')</l>
<l>fwrite_string (FileHandle, 'Rotation around the x axis (in degrees):' + '\n' + BoundingBoxTransPose[3] + '\n' + '\n')</l>
<l>fwrite_string (FileHandle, 'Rotation around the y axis (in degrees):' + '\n' + BoundingBoxTransPose[4] + '\n' + '\n')</l>
<l>fwrite_string (FileHandle, 'Rotation around the z axis (in degrees):' + '\n' + BoundingBoxTransPose[5] + '\n' + '\n')</l>
<l>close_file (FileHandle)</l>
<c></c>
<c>* _________________________________________________________________________</c>
<c></c>
<c>* Show data (Centre)</c>
<l>* dev_open_window (0, 0, Width / 2, Height / 2, 'black', Window3D)</l>
<l>* create_pose (0.0, 0.0, 50.0, 0, 0, 0, 'Rp+T', 'gba', 'point', Pose)</l>
<l>* gen_cam_par_area_scan_division (0.025, 0, 5.2e-06, 5.2e-06, Width / 4.0, Height / 4.0, Width / 2.0, Height / 2.0, CameraParam)</l>
<l>* Instructions := ['Rotate: Left button','Zoom: Shift + left button','Move: Ctrl + left button']</l>
<l>* visualize_object_model_3d (Window3D, PointCloudCThresholdedFiltered, CameraParam, Pose, ['red_channel_attrib','green_channel_attrib','blue_channel_attrib'], ['red','green','blue'], [], [], Instructions, PoseOut)</l>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
